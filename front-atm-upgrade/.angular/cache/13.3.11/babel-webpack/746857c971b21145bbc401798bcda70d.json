{"ast":null,"code":"import _inherits from \"C:\\\\atividade_A3_usabilidade_desenvolvimento_web\\\\front-atm-upgrade\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\atividade_A3_usabilidade_desenvolvimento_web\\\\front-atm-upgrade\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _classCallCheck from \"C:\\\\atividade_A3_usabilidade_desenvolvimento_web\\\\front-atm-upgrade\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\atividade_A3_usabilidade_desenvolvimento_web\\\\front-atm-upgrade\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n  var hasSeed = false;\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n  return function scanOperatorFunction(source) {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\nvar ScanOperator = /*#__PURE__*/function () {\n  function ScanOperator(accumulator, seed) {\n    var hasSeed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    _classCallCheck(this, ScanOperator);\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.hasSeed = hasSeed;\n  }\n  _createClass(ScanOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    }\n  }]);\n  return ScanOperator;\n}();\nvar ScanSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(ScanSubscriber, _Subscriber);\n  var _super = _createSuper(ScanSubscriber);\n  function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n    var _this;\n    _classCallCheck(this, ScanSubscriber);\n    _this = _super.call(this, destination);\n    _this.accumulator = accumulator;\n    _this._seed = _seed;\n    _this.hasSeed = hasSeed;\n    _this.index = 0;\n    return _this;\n  }\n  _createClass(ScanSubscriber, [{\n    key: \"seed\",\n    get: function get() {\n      return this._seed;\n    },\n    set: function set(value) {\n      this.hasSeed = true;\n      this._seed = value;\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      if (!this.hasSeed) {\n        this.seed = value;\n        this.destination.next(value);\n      } else {\n        return this._tryNext(value);\n      }\n    }\n  }, {\n    key: \"_tryNext\",\n    value: function _tryNext(value) {\n      var index = this.index++;\n      var result;\n      try {\n        result = this.accumulator(this.seed, value, index);\n      } catch (err) {\n        this.destination.error(err);\n      }\n      this.seed = result;\n      this.destination.next(result);\n    }\n  }]);\n  return ScanSubscriber;\n}(Subscriber); //# sourceMappingURL=scan.js.map","map":null,"metadata":{},"sourceType":"module"}