{"ast":null,"code":"import _inherits from \"C:\\\\atividade_A3_usabilidade_desenvolvimento_web\\\\atm-upgrade\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\atividade_A3_usabilidade_desenvolvimento_web\\\\atm-upgrade\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _classCallCheck from \"C:\\\\atividade_A3_usabilidade_desenvolvimento_web\\\\atm-upgrade\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\atividade_A3_usabilidade_desenvolvimento_web\\\\atm-upgrade\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function takeLast(count) {\n  return function takeLastOperatorFunction(source) {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\nvar TakeLastOperator = /*#__PURE__*/function () {\n  function TakeLastOperator(total) {\n    _classCallCheck(this, TakeLastOperator);\n    this.total = total;\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError();\n    }\n  }\n  _createClass(TakeLastOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    }\n  }]);\n  return TakeLastOperator;\n}();\nvar TakeLastSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(TakeLastSubscriber, _Subscriber);\n  var _super = _createSuper(TakeLastSubscriber);\n  function TakeLastSubscriber(destination, total) {\n    var _this;\n    _classCallCheck(this, TakeLastSubscriber);\n    _this = _super.call(this, destination);\n    _this.total = total;\n    _this.ring = new Array();\n    _this.count = 0;\n    return _this;\n  }\n  _createClass(TakeLastSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var ring = this.ring;\n      var total = this.total;\n      var count = this.count++;\n      if (ring.length < total) {\n        ring.push(value);\n      } else {\n        var index = count % total;\n        ring[index] = value;\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var destination = this.destination;\n      var count = this.count;\n      if (count > 0) {\n        var total = this.count >= this.total ? this.total : this.count;\n        var ring = this.ring;\n        for (var i = 0; i < total; i++) {\n          var idx = count++ % total;\n          destination.next(ring[idx]);\n        }\n      }\n      destination.complete();\n    }\n  }]);\n  return TakeLastSubscriber;\n}(Subscriber); //# sourceMappingURL=takeLast.js.map","map":null,"metadata":{},"sourceType":"module"}